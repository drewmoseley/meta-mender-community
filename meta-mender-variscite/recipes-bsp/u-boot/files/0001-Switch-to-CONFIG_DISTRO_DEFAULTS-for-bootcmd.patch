From 6af059c1acc02a5788d5bbd0ebc9ee69e031bf61 Mon Sep 17 00:00:00 2001
From: Drew Moseley <drew.moseley@northern.tech>
Date: Wed, 16 Sep 2020 13:49:16 -0400
Subject: [PATCH] Switch to CONFIG_DISTRO_DEFAULTS for bootcmd.

Signed-off-by: Drew Moseley <drew.moseley@northern.tech>
---
 configs/mx6ul_var_dart_mmc_defconfig |   1 +
 include/configs/mx6ul_var_dart.h     | 124 +++++++--------------------
 2 files changed, 30 insertions(+), 95 deletions(-)

diff --git a/configs/mx6ul_var_dart_mmc_defconfig b/configs/mx6ul_var_dart_mmc_defconfig
index e034a659ef..68089fbce7 100644
--- a/configs/mx6ul_var_dart_mmc_defconfig
+++ b/configs/mx6ul_var_dart_mmc_defconfig
@@ -47,3 +47,4 @@ CONFIG_USB_GADGET_DOWNLOAD=y
 CONFIG_VIDEO=y
 # CONFIG_VIDEO_SW_CURSOR is not set
 CONFIG_OF_LIBFDT=y
+CONFIG_DISTRO_DEFAULTS=y
diff --git a/include/configs/mx6ul_var_dart.h b/include/configs/mx6ul_var_dart.h
index ee0ce007eb..9d3ee386a7 100644
--- a/include/configs/mx6ul_var_dart.h
+++ b/include/configs/mx6ul_var_dart.h
@@ -59,83 +59,45 @@
 #define CONFIG_SYS_I2C_SPEED		100000
 #endif
 
+#ifdef CONFIG_SPL_BUILD
+#define BOOTENV
+#else
+#define BOOT_TARGET_DEVICES(func) \
+        func(MMC, mmc, 1) \
+        func(MMC, mmc, 0)
+#include <config_distro_bootcmd.h>
+#endif
+
 #define NAND_BOOT_ENV_SETTINGS \
-	"nandargs=setenv bootargs console=${console},${baudrate} " \
-		"ubi.mtd=4 root=ubi0:rootfs rootfstype=ubifs rw ${cma_size}\0" \
-	"nandboot=echo Booting from nand ...; " \
-		"run nandargs; " \
-		"run optargs; " \
-		"nand read ${loadaddr} 0x500000 0xbe0000; " \
-		"nand read ${fdt_addr} 0x10e0000 0x20000; " \
-		"bootz ${loadaddr} - ${fdt_addr}\0" \
+	"nandargs=setenv bootargs console=${console},${baudrate} \
+		${cma_size}\0" \
 	"mtdids=" MTDIDS_DEFAULT "\0" \
 	"mtdparts=" MTDPARTS_DEFAULT "\0"
 
 
 #define MMC_BOOT_ENV_SETTINGS \
-	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
-	"mmcblk=0\0" \
-	"mmcautodetect=yes\0" \
-	"mmcbootpart=1\0" \
-	"mmcrootpart=2\0" \
 	"mmcargs=setenv bootargs console=${console},${baudrate} " \
-		"root=/dev/mmcblk${mmcblk}p${mmcrootpart} rootwait rw " \
-		"${cma_size}\0" \
-	"loadbootenv=" \
-		"load mmc ${mmcdev}:${mmcbootpart} ${loadaddr} ${bootdir}/${bootenv}\0" \
-	"importbootenv=echo Importing bootenv from mmc ...; " \
-		"env import -t ${loadaddr} ${filesize}\0" \
-	"loadbootscript=" \
-		"load mmc ${mmcdev}:${mmcbootpart} ${loadaddr} ${bootdir}/${script};\0" \
-	"bootscript=echo Running bootscript from mmc ...; " \
-		"source\0" \
-	"loadimage=load mmc ${mmcdev}:${mmcbootpart} ${loadaddr} ${bootdir}/${image}\0" \
-	"loadfdt=run findfdt; " \
-		"echo fdt_file=${fdt_file}; " \
-		"load mmc ${mmcdev}:${mmcbootpart} ${fdt_addr} ${bootdir}/${fdt_file}\0" \
-	"mmcboot=echo Booting from mmc ...; " \
-		"run mmcargs; " \
-		"run optargs; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if run loadfdt; then " \
-				"bootz ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"if test ${boot_fdt} = try; then " \
-					"bootz; " \
-				"else " \
-					"echo WARN: Cannot load the DT; " \
-				"fi; " \
-			"fi; " \
-		"else " \
-			"bootz; " \
-		"fi\0" \
-
+		"${cma_size}\0"
 
 #ifdef CONFIG_NAND_BOOT
 #define BOOT_ENV_SETTINGS	NAND_BOOT_ENV_SETTINGS
 #define CONFIG_BOOTCOMMAND \
 	"run ramsize_check; " \
-	"run nandboot || " \
-	"run netboot"
+	"run nandargs; " \
+	"run optargs; " \
+	"run findfdt; " \
+	"setenv kernel_addr_r ${loadaddr}; " \
+	"run distro_bootcmd"
 
 #else
 #define BOOT_ENV_SETTINGS	MMC_BOOT_ENV_SETTINGS
 #define CONFIG_BOOTCOMMAND \
 	"run ramsize_check; " \
-	"mmc dev ${mmcdev};" \
-	"mmc dev ${mmcdev}; if mmc rescan; then " \
-		"if run loadbootenv; then " \
-			"run importbootenv; " \
-		"fi; " \
-		"if run loadbootscript; then " \
-			"run bootscript; " \
-		"else " \
-			"if run loadimage; then " \
-				"run mmcboot; " \
-			"else run netboot; " \
-			"fi; " \
-		"fi; " \
-	"else run netboot; fi"
+	"run mmcargs; " \
+	"run optargs; " \
+        "run findfdt; " \
+	"setenv kernel_addr_r ${loadaddr}; " \
+	"run distro_bootcmd"
 
 #endif
 
@@ -144,13 +106,12 @@
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	BOOT_ENV_SETTINGS \
+        BOOTENV \
 	OPT_ENV_SETTINGS \
 	"bootenv=uEnv.txt\0" \
-	"script=boot.scr\0" \
-	"image=zImage\0" \
 	"console=ttymxc0\0" \
-	"fdt_file=undefined\0" \
-	"fdt_addr=0x83000000\0" \
+	"fdtfile=undefined\0" \
+	"fdt_addr_r=0x83000000\0" \
 	"fdt_high=0xffffffff\0" \
 	"initrd_high=0xffffffff\0" \
 	"panel=VAR-WVGA-LCD\0" \
@@ -162,45 +123,18 @@
 	"splashdisable=setenv splashfile; setenv splashimage\0" \
 	"boot_fdt=try\0" \
 	"ip_dyn=yes\0" \
-	"netargs=setenv bootargs console=${console},${baudrate} " \
-		"root=/dev/nfs rw ${cma_size}" \
-		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
-	"netboot=echo Booting from net ...; " \
-		"run netargs; " \
-		"run optargs; " \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"${get_cmd} ${image}; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"run findfdt; " \
-			"echo fdt_file=${fdt_file}; " \
-			"if ${get_cmd} ${fdt_addr} ${fdt_file}; then " \
-				"bootz ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"if test ${boot_fdt} = try; then " \
-					"bootz; " \
-				"else " \
-					"echo WARN: Cannot load the DT; " \
-				"fi; " \
-			"fi; " \
-		"else " \
-			"bootz; " \
-		"fi;\0" \
 	"usbnet_devaddr=f8:dc:7a:00:00:02\0" \
 	"usbnet_hostaddr=f8:dc:7a:00:00:01\0" \
 	"ramsize_check="\
 		"if test $sdram_size -lt 256; then " \
 			"setenv cma_size cma=32MB; " \
-			"setenv fdt_addr 0x84000000; " \
+			"setenv fdt_addr_r 0x84000000; " \
 			"setenv loadaddr 0x84600000; " \
 		"else " \
 			"setenv cma_size cma=64MB; " \
 		"fi;\0" \
 	"findfdt="\
-		"if test $fdt_file = undefined; then " \
+		"if test $fdtfile = undefined; then " \
 			"if test $board_name = DART-6UL; then " \
 				"setenv som var-dart; " \
 				"setenv carrier 6ulcustomboard; " \
@@ -232,10 +166,10 @@
 			"fi; " \
 			"if test -n $soc_type && test -n $som && " \
 			   "test -n $storage && test -n $mmc0_dev && test -n $carrier; then " \
-				"setenv fdt_file ${soc_type}-${som}-${carrier}-${storage}-${mmc0_dev}.dtb; " \
+				"setenv fdtfile ${soc_type}-${som}-${carrier}-${storage}-${mmc0_dev}.dtb; " \
 			"fi; " \
 			"setenv som; setenv carrier; setenv storage; setenv mmc0_dev; " \
-			"if test $fdt_file = undefined; then " \
+			"if test $fdtfile = undefined; then " \
 				"echo WARNING: Could not determine dtb to use; " \
 			"fi; " \
 		"fi;\0"
-- 
2.28.0

